% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drc_Helper.R
\name{mselect.plus}
\alias{mselect.plus}
\alias{mselect.ZG}
\title{added functionality for mselect}
\usage{
mselect.plus(
  object = NULL,
  fctList = NULL,
  nested = FALSE,
  sorted = c("IC", "Res var", "Lack of fit", "no"),
  linreg = FALSE,
  icfct = AIC,
  respCol = "effect",
  doseCol = "dose",
  data = NULL,
  type = "continuous",
  additionalReliability = c("EFSA")
)

mselect.ZG(
  object = NULL,
  fctList = NULL,
  nested = FALSE,
  sorted = c("IC", "Res var", "Lack of fit", "no"),
  linreg = FALSE,
  icfct = AIC,
  respCol = "effect",
  doseCol = "dose",
  data = NULL,
  type = "continuous",
  additionalReliability = c("EFSA")
)
}
\arguments{
\item{object}{a fitted object of class 'drc'.}

\item{fctList}{a list of dose-response functions to be compared.}

\item{nested}{logical. TRUE results in F tests between adjacent models (in 'fctList'). Only sensible for nested models.}

\item{sorted}{character string determining according to which criterion the model fits are ranked, default is IC.}

\item{linreg}{logical indicating whether or not additionally polynomial regression models (linear, quadratic, and cubic models) should be fitted (they could be useful for a kind of informal lack-of-test consideration for the models specified, capturing unexpected departures).}

\item{icfct}{function for supplying the information criterion to be used. AIC and BIC are two options.}

\item{respCol}{name of the response column}

\item{doseCol}{name of the dose column}

\item{data}{data used}

\item{type}{type of models, binomial, continuous, etc.}

\item{additionalReliability}{additional reliability need to be calculated}
}
\value{
a model comparison object with class drcComp
}
\description{
added functionality for mselect

Deprecated helper function for mselect
}
\details{
Due to old ECxHelper development where mselect.plus is defined as mselect.ZG
}
\examples{
\dontrun{
data("dat_medium")
dat_medium <- dat_medium \%>\% mutate(Treatment=factor(Dose,levels=unique(Dose)))
dat_medium$Response[dat_medium$Response < 0] <- 0
mod <- drm(Response~Dose,data=dat_medium,fct=LL.3())
fctList <- list(LN.4(),LL.4(),W1.3(),LL2.2())
res <- mselect.plus(mod,fctList = fctList )
modList <- res$modList
}
}
\keyword{Deprecated}
